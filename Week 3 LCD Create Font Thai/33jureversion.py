import I2C_LCD_driver
import RPi.GPIO as GPIO
from time import sleep

mylcd = I2C_LCD_driver.lcd()
button = 12

GPIO.setmode(GPIO.BCM)
GPIO.setup(button, GPIO.IN, pull_up_down=GPIO.PUD_UP)

font = [
   [0x00,0x08,0x08,0x08,0x08,0x0E,0x09,0x06], # Char 0
   [0x01,0x09,0x19,0x09,0x09,0x09,0x09,0x0F], # Char 1
   [0x00,0x0C,0x12,0x02,0x02,0x02,0x02,0x02], # Char 2
   [0x1F,0x10,0x10,0x1F,0x01,0x11,0x11,0x1F], # Char 3
   [0x1A,0x1A,0x0A,0x0A,0x0A,0x0A,0x0F,0x0B], # Char 4
   [0x18,0x1B,0x0D,0x09,0x09,0x09,0x09,0x09], # Char 5
   [0x1F,0x10,0x1F,0x01,0x01,0x07,0x05,0x07]  # Char 6
]

mylcd.lcd_load_custom_chars(font)
mylcd.lcd_clear()
 
row1 = 0x80
row2 = 0xC0

while True:
	if row1 < 0x81:
		row1 = 0x81 
		row2 = 0xC1
	if row1 > 0x8F:
		row1 = 0x8F
		row2 = 0xCF
	if GPIO.input(button) == 0:
		row1 += 1
		row2 += 1
	if GPIO.input(button) == 1:
		row1 -= 1 
		row2 -= 1
	mylcd.lcd_clear()
	mylcd.lcd_write(row1) 
	mylcd.lcd_write_char(0)
	mylcd.lcd_write_char(1)
	mylcd.lcd_write_char(2)
	mylcd.lcd_write(row2) 
	mylcd.lcd_write_char(3)
	mylcd.lcd_write_char(4)
	mylcd.lcd_write_char(5)
	mylcd.lcd_write_char(6)
	sleep(0.2)
	print (GPIO.input(button))
